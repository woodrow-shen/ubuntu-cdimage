#! /usr/bin/python3

# Copyright (C) 2013 Canonical Ltd.
# Author: Colin Watson <cjwatson@ubuntu.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 3 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

"""Publish a daily build as a release."""

from optparse import OptionParser
import os
import sys

sys.path.insert(0, os.path.join(sys.path[0], os.pardir, "lib"))


def main():
    from cdimage.config import Config
    from cdimage.tree import Tree

    parser = OptionParser(
        "%prog [--dry-run] DAILY-SOURCE DAILY-DATE TYPE OFFICIAL [STATUS]\n"
        "OFFICIAL=yes to publish to releases.ubuntu.com, poolonly to "
        "pre-publish, named to publish to cdimage.ubuntu.com as "
        "$PROJECT-$VERSION-*, otherwise no.")
    parser.add_option(
        "-n", "--dry-run", default=False, action="store_true",
        help="Show equivalent commands rather than running them.")
    options, args = parser.parse_args()
    if len(args) < 1:
        parser.error("need daily-source")
    if len(args) < 2:
        parser.error("need daily-date")
    if len(args) < 3:
        parser.error("need type")
    if len(args) < 4:
        parser.error("need official")
    source = args[0]
    date = args[1]
    publish_type = args[2]
    official = args[3]
    status = args[4] if len(args) >= 5 else None
    config = Config()
    tree = Tree.get_release(config, official)
    # image_type unused
    publisher = tree.get_publisher(
        "daily", official, status=status, dry_run=options.dry_run)
    publisher.publish_release(source, date, publish_type)


if __name__ == "__main__":
    main()
