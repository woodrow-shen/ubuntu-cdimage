#! /usr/bin/python2

# Copyright (C) 2013 Canonical Ltd.
# Author: Colin Watson <cjwatson@ubuntu.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 3 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

"""Execute a subsidiary command in the context of a given project."""

from optparse import OptionParser
import os
import sys

sys.path.insert(0, os.path.join(sys.path[0], os.pardir, "lib"))


def main():
    from cdimage.project import project_map, setenv_for_project

    parser = OptionParser(
        "%prog PROJECT [COMMAND ARGS...]\n"
        "Recognised projects:\n" +
        "\n".join("  %s" % project for project in sorted(project_map)))
    parser.disable_interspersed_args()
    _, args = parser.parse_args()
    if len(args) < 1:
        parser.error("need project")
    project = args[0]
    if not setenv_for_project(project):
        parser.error("unrecognised project '%s'" % project)
    if len(args) == 1:
        os.execl(os.environ.get("SHELL", "/bin/sh"), "-i")
    else:
        os.execvp(args[1], args[1:])


if __name__ == "__main__":
    main()
